import java.nio.file.Paths

def versions = [
        kotlin        : '1.8.21',
        jetty         : '9.4.27.v20200227',
        shadowjar     : '8.1.1',
        guava         : '30.1-jre',
        bundletool    : '1.11.2',
        gson          : '2.8.6',
        junit         : '5.5.2',
        junit_platform: '1.5.2',
        truth         : '1.1.0',
        mockito       : '5.4.0',
        mockito_kotlin: '5.0.0',
        httpcomponents: '4.5.10',
        gcp_storage   : '2.23.0',
        s3_storage    : '1.11.822'
]

ext.versions = versions

def deps = [:]

deps.jetty = [
        server: "org.eclipse.jetty:jetty-server:$versions.jetty"
]

deps.gson = "com.google.code.gson:gson:$versions.gson"

deps.guava = "com.google.guava:guava:$versions.guava"

deps.junit = [
        api   : "org.junit.jupiter:junit-jupiter-api:$versions.junit",
        params: "org.junit.jupiter:junit-jupiter-params:$versions.junit",
        engine: "org.junit.jupiter:junit-jupiter-engine:$versions.junit",
        runner: "org.junit.platform:junit-platform-runner:$versions.junit_platform",
]

deps.mockito = [
        core   : "org.mockito:mockito-core:$versions.mockito",
        jupiter: "org.mockito:mockito-junit-jupiter:$versions.mockito",
        kotlin : "org.mockito.kotlin:mockito-kotlin:$versions.mockito_kotlin"
]

deps.truth = "androidx.test.ext:truth:$versions.truth"

deps.httpcomponents = [
        client: "org.apache.httpcomponents:httpclient:$versions.httpcomponents",
        mime  : "org.apache.httpcomponents:httpmime:$versions.httpcomponents"
]

deps.gcp = [
        storage: "com.google.cloud:google-cloud-storage:$versions.gcp_storage"
]

deps.aws = [
        s3: "com.amazonaws:aws-java-sdk-s3:$versions.s3_storage"
]

def gradleCacheDir = Paths.get(System.getProperty("user.home"), ".gradle", "caches", "modules-2", "files-2.1")
gradleCacheDir.toFile().mkdirs()
def bundleToolFile = gradleCacheDir.resolve("bundletool-${versions.bundletool}.jar").toFile()

if (!bundleToolFile.exists()) {
    new URL("https://github.com/google/bundletool/releases/download/${versions.bundletool}/bundletool-all-${versions.bundletool}.jar")
            .withInputStream { i -> bundleToolFile.withOutputStream { it << i } }
}

deps.bundletool = files(bundleToolFile)
deps.bundletool_maven = "com.android.tools.build:bundletool:$versions.bundletool"
ext.deps = deps